// <auto-generated />
using System;
using Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20230822063957_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("TRAINING_SCHEMA_OSAID")
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("BOOK_SEQ");

            modelBuilder.HasSequence("BOOKS_SEQ");

            modelBuilder.HasSequence("BOOKS_SEQUENCE");

            modelBuilder.HasSequence("ORDER_SEQ");

            modelBuilder.HasSequence("ORDERS_SEQ");

            modelBuilder.Entity("Domain.Models.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("AUTHOR");

                    b.Property<long?>("Numberofpage")
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("NUMBEROFPAGE");

                    b.Property<DateTime?>("Publishedat")
                        .HasColumnType("DATE")
                        .HasColumnName("PUBLISHEDAT");

                    b.Property<string>("Title")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("TITLE");

                    b.HasKey("Id");

                    b.ToTable("BOOK", "TRAINING_SCHEMA_OSAID");
                });

            modelBuilder.Entity("Domain.Models.City", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"), 1L, 1);

                    b.Property<string>("Cityname")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("CITYNAME");

                    b.HasKey("Id");

                    b.ToTable("CITY", "TRAINING_SCHEMA_OSAID");
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.Property<decimal>("Orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("ORDERID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Orderid"), 1L, 1);

                    b.Property<string>("Customername")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CUSTOMERNAME");

                    b.Property<DateTime>("Orderdate")
                        .HasColumnType("DATE")
                        .HasColumnName("ORDERDATE");

                    b.Property<decimal?>("Totalamount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTALAMOUNT");

                    b.HasKey("Orderid");

                    b.ToTable("ORDERS", "TRAINING_SCHEMA_OSAID");
                });

            modelBuilder.Entity("Domain.Models.Orderitem", b =>
                {
                    b.Property<decimal>("Orderitemid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ORDERITEMID");

                    b.Property<decimal>("Orderid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ORDERID");

                    b.Property<string>("Productname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PRODUCTNAME");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("NUMBER")
                        .HasColumnName("QUANTITY");

                    b.Property<decimal?>("Totalprice")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTALPRICE");

                    b.Property<decimal>("Unitprice")
                        .HasColumnType("NUMBER")
                        .HasColumnName("UNITPRICE");

                    b.HasKey("Orderitemid");

                    b.HasIndex("Orderid");

                    b.ToTable("ORDERITEM", "TRAINING_SCHEMA_OSAID");
                });

            modelBuilder.Entity("Domain.Models.Orderitem", b =>
                {
                    b.HasOne("Domain.Models.Order", "Order")
                        .WithMany("Orderitems")
                        .HasForeignKey("Orderid")
                        .IsRequired()
                        .HasConstraintName("FK_ORDER");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.Navigation("Orderitems");
                });
#pragma warning restore 612, 618
        }
    }
}
